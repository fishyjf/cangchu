<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="tk.mybatis.springboot.mapper.IntoOutInfoMapper">

    <resultMap id="BaseResultMap" type="tk.mybatis.springboot.model.entity.IntoOutInfo">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
        <result column="number" jdbcType="INTEGER" property="number" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    </resultMap>


    <sql id="Base_Column_List">
        id, goods_id, number, type, create_time
    </sql>


    <delete id="delete" parameterType="java.lang.Integer">
        delete from t_into_out_info
        where id = #{id,jdbcType=INTEGER}
    </delete>


    <insert id="insert" parameterType="tk.mybatis.springboot.model.entity.IntoOutInfo">
        insert into t_into_out_info (id, goods_id, number,
                                     type, create_time)
        values (#{id,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{number,jdbcType=INTEGER},
                #{type,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
    </insert>


    <insert id="insertDynamic" parameterType="tk.mybatis.springboot.model.entity.IntoOutInfo">
        insert into t_into_out_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="goodsId != null">
                goods_id,
            </if>
            <if test="number != null">
                number,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="goodsId != null">
                #{goodsId,jdbcType=INTEGER},
            </if>
            <if test="number != null">
                #{number,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>


    <update id="updateDynamic" parameterType="tk.mybatis.springboot.model.entity.IntoOutInfo">
        update t_into_out_info
        <set>
            <if test="goodsId != null">
                goods_id = #{goodsId,jdbcType=INTEGER},
            </if>
            <if test="number != null">
                number = #{number,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>


    <update id="update" parameterType="tk.mybatis.springboot.model.entity.IntoOutInfo">
        update t_into_out_info
        set goods_id = #{goodsId,jdbcType=INTEGER},
            number = #{number,jdbcType=INTEGER},
            type = #{type,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>


    <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from  t_into_out_info
        where id = #{id,jdbcType=INTEGER}
    </select>


    <sql id="findPageWithWhere">
        <where> 1=1
            <if test="id != null" >
                and id = #{id,jdbcType=INTEGER}
            </if>
            <if test="goodsId != null" >
                and goods_id = #{goodsId,jdbcType=INTEGER}
            </if>
            <if test="number != null" >
                and number = #{number,jdbcType=INTEGER}
            </if>
            <if test="type != null and type != ''" >
                and type = #{type,jdbcType=VARCHAR}
            </if>
            <if test="createTime != null" >
                and create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
        </where>
    </sql>


    <select id="findPageWithResult" parameterType="tk.mybatis.springboot.model.dto.IntoOutInfoDTO" resultType="tk.mybatis.springboot.model.bo.IntoOutInfoBO">
        select
        tioi.id, tioi.goods_id goodsId, tioi.number, tioi.type, DATE_FORMAT(tioi.create_time, '%Y-%m-%d %H:%i:%s') createTime, g.name
        from  t_into_out_info tioi left join t_goods g on tioi.goods_id = g.id
        <where> 1=1
            <if test="id != null" >
                and tioi.id = #{id,jdbcType=INTEGER}
            </if>
            <if test="goodsId != null" >
                and tioi.goods_id = #{goodsId,jdbcType=INTEGER}
            </if>
            <if test="number != null" >
                and tioi.number = #{number,jdbcType=INTEGER}
            </if>
            <if test="type != null and type != ''" >
                and tioi.type = #{type,jdbcType=VARCHAR}
            </if>
            <if test="name != null and name != ''" >
                and g.name = #{name,jdbcType=VARCHAR}
            </if>
            <if test="createTime != null" >
                and DATE_FORMAT(tioi.create_time, '%Y-%m-%d %H:%i:%s') = #{createTime,jdbcType=VARCHAR}
            </if>
        </where>
    </select>


    <select id="findPageWithCount" parameterType="tk.mybatis.springboot.model.dto.IntoOutInfoDTO" resultType="Integer">
        select count(1)
        from t_into_out_info
        <include refid="findPageWithWhere" />
    </select>
</mapper>