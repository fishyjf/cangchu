<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="tk.mybatis.springboot.mapper.InventoryMapper">

    <resultMap id="BaseResultMap" type="tk.mybatis.springboot.model.entity.Inventory">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
        <result column="number" jdbcType="INTEGER" property="number" />
        <result column="status" jdbcType="VARCHAR" property="status" />
    </resultMap>


    <sql id="Base_Column_List">
        id, goods_id, number, status
    </sql>


    <delete id="delete" parameterType="java.lang.Integer">
        delete from t_inventory
        where id = #{id,jdbcType=INTEGER}
    </delete>


    <insert id="insert" parameterType="tk.mybatis.springboot.model.entity.Inventory">
        insert into t_inventory (id, goods_id, number,
                                 status)
        values (#{id,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{number,jdbcType=INTEGER},
                #{status,jdbcType=VARCHAR})
    </insert>


    <insert id="insertDynamic" parameterType="tk.mybatis.springboot.model.entity.Inventory">
        insert into t_inventory
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="goodsId != null">
                goods_id,
            </if>
            <if test="number != null">
                number,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="goodsId != null">
                #{goodsId,jdbcType=INTEGER},
            </if>
            <if test="number != null">
                #{number,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>


    <update id="updateDynamic" parameterType="tk.mybatis.springboot.model.entity.Inventory">
        update t_inventory
        <set>
            <if test="goodsId != null">
                goods_id = #{goodsId,jdbcType=INTEGER},
            </if>
            <if test="number != null">
                number = #{number,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>


    <update id="update" parameterType="tk.mybatis.springboot.model.entity.Inventory">
        update t_inventory
        set goods_id = #{goodsId,jdbcType=INTEGER},
            number = #{number,jdbcType=INTEGER},
            status = #{status,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>


    <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from  t_inventory
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectByGoodsId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from  t_inventory
        where goods_id = #{goodsId,jdbcType=INTEGER} for update
    </select>


    <sql id="findPageWithWhere">
        <where> 1=1
            <if test="id != null" >
                and id = #{id,jdbcType=INTEGER}
            </if>
            <if test="goodsId != null" >
                and goods_id = #{goodsId,jdbcType=INTEGER}
            </if>
            <if test="number != null" >
                and number = #{number,jdbcType=INTEGER}
            </if>
            <if test="status != null and status != ''" >
                and status = #{status,jdbcType=VARCHAR}
            </if>
        </where>
    </sql>


    <select id="findPageWithResult" parameterType="tk.mybatis.springboot.model.dto.InventoryDTO" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from  t_inventory
        <include refid="findPageWithWhere" />
        limit #{start},#{pageSize}
    </select>


    <select id="findPageWithCount" parameterType="tk.mybatis.springboot.model.dto.InventoryDTO" resultType="Integer">
        select count(1)
        from t_inventory
        <include refid="findPageWithWhere" />
    </select>
</mapper>